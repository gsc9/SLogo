#
# Turtle Commands
#
devant = backend.command.turtle.ForwardCommand
dev = backend.command.turtle.ForwardCommand
derriere = backend.command.turtle.BackCommand
der = backend.command.turtle.BackCommand
gauche = backend.command.turtle.TurnLeftCommand
gc = backend.command.turtle.TurnLeftCommand
droite = backend.command.turtle.TurnRightCommand
dr = backend.command.turtle.TurnRightCommand
definirentete = backend.command.turtle.SetHeadingCommand
defett = backend.command.turtle.SetHeadingCommand
#towards
positionexy = backend.command.turtle.SetXYCommand
aller = backend.command.turtle.SetXYCommand
styloactif = backend.command.turtle.PenDownCommand
sac = backend.command.turtle.PenDownCommand
styloinactif = backend.command.turtle.PenUpCommand
sic = backend.command.turtle.PenUpCommand
montrertortue = backend.command.turtle.ShowTurtleCommand
mt = backend.command.turtle.ShowTurtleCommand
cachertortue = backend.command.turtle.HideTurtleCommand
ct = backend.command.turtle.HideTurtleCommand
maison = backend.command.turtle.HomeCommand
effacerecran = backend.command.turtle.ClearScreenCommand
ee = backend.command.turtle.ClearScreenCommand
#
# Turtle Queries
#
corx = backend.command.turtle.XCorQuery
cory = backend.command.turtle.YCorQuery
entete = backend.command.turtle.HeadingQuery
styloactif? = backend.command.turtle.PenDownQuery
styloactifp = backend.command.turtle.PenDownQuery
visible? = backend.command.turtle.ShowingCommand
visiblep = backend.command.turtle.ShowingCommand
#
# Math Operations
#
somme = backend.command.math.SumCommand
+ = backend.command.math.SumCommand
difference = backend.command.math.DifferenceCommand
- = backend.command.math.DifferenceCommand
produit = backend.command.math.ProductCommand
* = backend.command.math.ProductCommand
quotient = backend.command.math.QuotientCommand
/ = backend.command.math.QuotientCommand
reste = backend.command.math.RemainderCommand
% = backend.command.math.RemainderCommand
moins = backend.command.math.MinusCommand
~ = backend.command.math.MinusCommand
aleatoire = backend.command.math.RandomCommand
sin = backend.command.math.SinCommand
cos = backend.command.math.CosCommand
tan = backend.command.math.TanCommand
atan = backend.command.math.ArcTanCommand
log = backend.command.math.LogCommand
pow = backend.command.math.PowCommand
#
# Boolean Operations
#
inferieur? = backend.command.booleanops.LessThanCommand
inferieurp = backend.command.booleanops.LessThanCommand
superieur? = backend.command.booleanops.GreaterThanCommand
superieurp = backend.command.booleanops.GreaterThanCommand
egal? = backend.command.booleanops.EqualCommand
egalp = backend.command.booleanops.EqualCommand
different? = backend.command.booleanops.NotEqualCommand
differentp = backend.command.booleanops.NotEqualCommand
et = backend.command.booleanops.AndCommand
ou = backend.command.booleanops.OrCommand
non = backend.command.booleanops.NotCommand
#
# Variables, Control, and User-Defined Commands
#
def = backend.command.variable.Make
repete = backend.command.control.RepeatCommand
zuocishu = backend.command.control.RepcountCommand
dotimes = backend.command.control.DoTimesCommand
pour = backend.command.control.ForCommand
si = backend.command.control.IfCommand
sinon = backend.command.control.IfElseCommand
a = backend.command.control.ToCommand
compter = backend.command.control.RepcountCommand
fait = backend.command.control.UserDefinedCommand
#
# Display Commands
#
#deffonddecran
#dfde
defcouleurdustylo = backend.command.display.SetPenColorCommand
dcds = backend.command.display.SetPenColorCommand
#deftailledustylo
#dts
defimage = backend.command.display.SetShapeCommand
di = backend.command.display.SetShapeCommand
defpalette = backend.command.display.SetPaletteCommand
couleurdustylo = backend.command.display.PenColorCommand
cds = backend.command.display.PenColorCommand
image = backend.command.display.ShapeCommand
im = backend.command.display.ShapeCommand
#stamp
#effacerstamps
##
## Multiple Turtle Commands
##
id = backend.command.turtle.IDCommand
dire = backend.command.turtle.TellCommand
#direpair
#direimpair
#demande
#demanderavec
##
## Syntax
##
[ = backend.command.Bracket
] = backend.command.BracketClose
#:
#(
#)
